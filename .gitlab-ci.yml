include:
  - project: "docker/process-webhooks"
    file: "/gitlab/deploy.yml"

variables:
  PROJECT_TO_BE_DEPLOYED: "docker/pccd"

stages:
  - build
  - deploy

.check_code_template: &check_code_base
  stage: build
  when: always
  before_script:
    - export DEBIAN_FRONTEND=noninteractive
    - apt-get update && apt-get upgrade -y && xargs apt-get install --no-install-recommends -y < apt-packages.txt
    - /bin/bash -c "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/HEAD/install.sh)"
    - eval "$(/home/linuxbrew/.linuxbrew/bin/brew shellenv)"
    - brew bundle install --file=apt-missing.Brewfile
    - npm ci
  script:
    - tools/composer.phar run parallel-lint
    - npm run check:size
    - npm run lint
    - npm run analysis
    - npx editorconfig-checker
  allow_failure: true

check_code_ubuntu:
  <<: *check_code_base
  image: ubuntu:devel

check_code_debian:
  <<: *check_code_base
  image: debian:testing

build:
  image: docker:latest
  services:
    - docker:dind
  before_script:
    - export DATETAG=$(date +%Y%m%d-%H%M%S)
    - docker login -u "$CI_REGISTRY_USER" -p "$CI_REGISTRY_PASSWORD" $CI_REGISTRY
  stage: build
  script:
    - DOCKER_IMAGE=${CI_REGISTRY_IMAGE}/pccd-web
    - docker build -f .docker/web-alpine.prod.Dockerfile --cache-from $DOCKER_IMAGE:latest --tag $DOCKER_IMAGE:$CI_COMMIT_SHA --tag $DOCKER_IMAGE:$DATETAG --tag $DOCKER_IMAGE:latest --build-arg ARG_MYSQL_DB=$MYSQL_DB --build-arg ARG_MYSQL_USER=$MYSQL_USER --build-arg ARG_MYSQL_PWD=$MYSQL_PWD --build-arg ARG_WEB_ADMIN_PWD=$WEB_ADMIN_PWD .
    - docker push $DOCKER_IMAGE:$CI_COMMIT_SHA
    - docker push $DOCKER_IMAGE:$DATETAG
    - docker push $DOCKER_IMAGE:latest
    - DOCKER_IMAGE=${CI_REGISTRY_IMAGE}/pccd-sql
    - docker build -f .docker/sql.prod.Dockerfile --cache-from $DOCKER_IMAGE:latest --tag $DOCKER_IMAGE:$CI_COMMIT_SHA --tag $DOCKER_IMAGE:$DATETAG --tag $DOCKER_IMAGE:latest --build-arg ARG_MYSQL_ROOT_PWD=$MYSQL_ROOT_PWD --build-arg ARG_MYSQL_DB=$MYSQL_DB --build-arg ARG_MYSQL_USER=$MYSQL_USER --build-arg ARG_MYSQL_PWD=$MYSQL_PWD .
    - docker push $DOCKER_IMAGE:$CI_COMMIT_SHA
    - docker push $DOCKER_IMAGE:$DATETAG
    - docker push $DOCKER_IMAGE:latest

deploy:
  stage: deploy
  when: manual
  extends:
    - .default-deploy

reset:
  stage: deploy
  when: manual
  extends:
    - .reset
