{
  "name": "pccd",
  "private": true,
  "description": "Paremiologia catalana comparada digital",
  "license": "AGPL-3.0-or-later",
  "repository": "https://github.com/Softcatala/pccd.git",
  "author": "Pere Orga Esteve <pere@orga.cat>",
  "homepage": "https://pccd.dites.cat",
  "bugs": "https://github.com/Softcatala/pccd/issues",
  "engines": {
    "node": ">=20"
  },
  "scripts": {
    "analysis": "concurrently -g --timings 'npm:analysis:*'",
    "analysis:phpstan": "./composer.phar run phpstan",
    "analysis:psalm": "./composer.phar run psalm",
    "analysis:rector": "./composer.phar run rector-lint",
    "build:assets": "scripts/build_assets.sh && npm run check:size",
    "check:certificate": "scripts/check_certificate.sh",
    "check:code": "./composer.phar run php-l && concurrently -g --timings npm:check:size npm:lint npm:analysis npm:test:bash npm:test:phpunit",
    "check:sitemap": "scripts/check_sitemap.sh",
    "check:size": "size-limit --silent",
    "clean:temp": "rm -rf test-results/ && rm -rf tmp/og/ && find tmp/ -maxdepth 1 -type f \\( -name '*.html' -o -name '*.json' ! -name assets-sizes.json \\) -delete && find . -maxdepth 1 -type f -name '*.html' -delete",
    "convert:db": "scripts/convert_db.sh",
    "decompress:images": "scripts/decompress_images.sh",
    "delete:images": "find docroot/img/imatges/ docroot/img/obres/ -mindepth 1 -delete",
    "docker:build": "scripts/docker_build.sh",
    "docker:build:alpine": "scripts/docker_build.sh --alpine",
    "docker:build:alpine-edge": "scripts/docker_build.sh --alpine-edge",
    "docker:build:spx": "scripts/docker_build.sh --build-arg profiler=spx",
    "docker:build:xhprof": "scripts/docker_build.sh --build-arg profiler=xhprof",
    "docker:sh": "docker exec -it pccd-web /bin/sh",
    "export:asset-sizes": "size-limit --json | jq '[.[] | {name: .name, size: .size}]' > tmp/assets-sizes.json",
    "export:code": "npm run clean:temp && scripts/export_code.sh",
    "export:commonvoice": "scripts/common-voice-export/export.sh",
    "export:db": "scripts/export_db.sh",
    "fix": "concurrently -g --timings 'npm:fix:*' && npm run fix-format",
    "fix:composer": "./composer.phar run composer-normalize",
    "fix:eslint": "eslint --fix 'scripts/**/*.js' 'src/**/*.js' 'tests/**/*.js'",
    "fix:rector": "./composer.phar run rector",
    "fix:stylelint": "stylelint --fix strict src/css/",
    "fix-format": "concurrently -g --timings 'npm:fix-format:*'",
    "fix-format:php-cs-fixer": "./composer.phar run php-cs-fixer",
    "fix-format:phpcbf": "./composer.phar run phpcbf",
    "fix-format:prettier": "prettier --write .",
    "fix-format:shfmt": "shfmt -l -w .",
    "generate:reports": "concurrently -g --timings 'npm:generate:reports:*'; scripts/aggregate_reports.sh",
    "generate:reports:check_images": "scripts/check_images.sh > /dev/null",
    "generate:reports:fonts_urls": "docker exec pccd-web php scripts/generate_report.php fonts_urls > tmp/test_fonts_URL.txt",
    "generate:reports:html_escape_and_link_urls": "docker exec pccd-web php scripts/generate_report.php html_escape_and_link_urls > tmp/test_html_escape_and_link_urls.txt",
    "generate:reports:imatges_duplicades": "node scripts/report-duplicate-images.js > tmp/test_imatges_duplicades.txt",
    "generate:reports:imatges_links_part1": "docker exec pccd-web php scripts/generate_report.php imatges_links 0 1500 > tmp/test_tmp_imatges_URL_ENLLAC_1.txt",
    "generate:reports:imatges_links_part2": "docker exec pccd-web php scripts/generate_report.php imatges_links 1500 3000 > tmp/test_tmp_imatges_URL_ENLLAC_2.txt",
    "generate:reports:imatges_links_part3": "docker exec pccd-web php scripts/generate_report.php imatges_links 3000 3500 > tmp/test_tmp_imatges_URL_ENLLAC_3.txt",
    "generate:reports:imatges_links_part4": "docker exec pccd-web php scripts/generate_report.php imatges_links 3500 > tmp/test_tmp_imatges_URL_ENLLAC_4.txt",
    "generate:reports:imatges_no_existents": "docker exec pccd-web php scripts/generate_report.php imatges_no_existents > tmp/test_imatges_no_existents.txt",
    "generate:reports:imatges_no_referenciades": "docker exec pccd-web php scripts/generate_report.php imatges_no_referenciades > tmp/test_imatges_no_referenciades.txt",
    "generate:reports:imatges_urls_part1": "docker exec pccd-web php scripts/generate_report.php imatges_urls 0 500 > tmp/test_tmp_imatges_URL_IMATGE_1.txt",
    "generate:reports:imatges_urls_part2": "docker exec pccd-web php scripts/generate_report.php imatges_urls 500 1500 > tmp/test_tmp_imatges_URL_IMATGE_2.txt",
    "generate:reports:imatges_urls_part3": "docker exec pccd-web php scripts/generate_report.php imatges_urls 1500 > tmp/test_tmp_imatges_URL_IMATGE_3.txt",
    "generate:reports:intl_modismes_molt_diferents": "docker exec pccd-web php scripts/generate_report.php intl_modismes_molt_diferents > tmp/test_intl_modismes_molt_diferents.txt",
    "generate:reports:intl_modismes_repetits": "docker exec pccd-web php scripts/generate_report.php intl_modismes_repetits > tmp/test_intl_modismes_repetits.txt",
    "generate:reports:intl_modismes_sospitosos": "docker exec pccd-web php scripts/generate_report.php intl_modismes_sospitosos > tmp/test_intl_modismes_sospitosos.txt",
    "generate:reports:intl_paremiotipus_repetits": "docker exec pccd-web php scripts/generate_report.php intl_paremiotipus_repetits > tmp/test_intl_paremiotipus_repetits.txt",
    "generate:reports:intl_paremiotipus_sospitosos": "docker exec pccd-web php scripts/generate_report.php intl_paremiotipus_sospitosos > tmp/test_intl_paremiotipus_sospitosos.txt",
    "generate:reports:languagetool": "scripts/languagetool-checker/generate_lt_report.sh",
    "generate:reports:llibres_urls": "docker exec pccd-web php scripts/generate_report.php llibres_urls > tmp/test_llibres_URL.txt",
    "generate:reports:paremiotipus_accents": "docker exec pccd-web php scripts/generate_report.php paremiotipus_accents > tmp/test_paremiotipus_accents.txt",
    "generate:reports:paremiotipus_repetits_part1": "docker exec pccd-web php scripts/generate_report.php paremiotipus_repetits 0 12000 > tmp/test_tmp_repetits_1.txt",
    "generate:reports:paremiotipus_repetits_part2": "docker exec pccd-web php scripts/generate_report.php paremiotipus_repetits 12000 28000 > tmp/test_tmp_repetits_2.txt",
    "generate:reports:paremiotipus_repetits_part3": "docker exec pccd-web php scripts/generate_report.php paremiotipus_repetits 28000 > tmp/test_tmp_repetits_3.txt",
    "generate:reports:sinonims": "docker exec pccd-web php scripts/sinonims-export/app.php > scripts/sinonims-export/sinonims_strict.txt 2> scripts/sinonims-export/sinonims.txt",
    "generate:reports:small_images": "node scripts/report-small-images.js > tmp/test_imatges_petites.txt",
    "generate:reports:unsupported_image_extensions": "node scripts/report-unsupported-image-extensions.js > tmp/test_imatges_file_extensions.txt",
    "generate:tags-openai": "docker exec pccd-web php scripts/sentence-tagger-openai/app.php",
    "import:commonvoice": "scripts/common-voice-export/import.sh",
    "install:db": "scripts/install.sh",
    "lint": "concurrently -g --timings 'npm:lint:*'",
    "lint-renovate": "npx --yes -package renovate renovate-config-validator",
    "lint:composer": "./composer.phar validate --strict",
    "lint:composer-normalize": "./composer.phar run composer-normalize-lint",
    "lint:docker": "if command -v hadolint >/dev/null 2>&1; then hadolint .docker/*Dockerfile; else echo 'hadolint not found, skipping docker linting' >&2; exit 0; fi",
    "lint:eslint": "eslint 'scripts/**/*.js' 'src/**/*.js' 'tests/**/*.js'",
    "lint:ls": "ls-lint",
    "lint:markdown": "markdownlint *.md docs/*.md",
    "lint:php-cs-fixer": "./composer.phar run php-cs-fixer-lint",
    "lint:phpcs": "./composer.phar run phpcs",
    "lint:prettier": "prettier --log-level log --check .",
    "lint:shellcheck": "for file in $(find scripts tests -type f -name '*.sh' -not -name '*.generated.sh'); do shellcheck \"$file\" || exit 1; done",
    "lint:shfmt": "shfmt -l -d .",
    "lint:stylelint": "stylelint src/css/",
    "lint:xml": "xmllint --noout *.xml docroot/*.xml",
    "lint:yamllint": "yamllint . --strict",
    "optimize:images": "node scripts/optimize-images.js && npm run optimize:svg",
    "optimize:svg": "svgo --eol lf --multipass -r --folder docroot/img",
    "outdated": "concurrently -g --timings 'npm:outdated:*'",
    "outdated:composer": "./composer.phar outdated --direct",
    "outdated:npm": "npm outdated",
    "postinstall": "./composer.phar install && npx playwright install",
    "prepare": "husky",
    "prepare:deploy": "npm run export:db && npm run refresh:test-data && npm run test && npm run generate:reports && npm run sync:reports",
    "refresh:test-data": "node scripts/refresh-test-data.js",
    "sync:reports": "(cd ../sinonims-cat/ && git pull --no-edit) && node scripts/softcatala-sinonims-export.js > src/reports/softcatala_sinonims.txt; (cd ../dsff-cms/ && git pull --no-edit && npm run ssh:extract-frases-pccd)",
    "test": "npm run test:bash && npm run test:phpunit && npm run test:e2e && npm run test:html-quality && npm run test:core-vitals; npm run check:certificate",
    "test:core-vitals": "scripts/audit_website.sh",
    "test:e2e": "playwright test",
    "test:bash": "for script in tests/bash/*.sh; do \"$script\" || exit 1; done",
    "test:html-quality": "scripts/validate_website.sh",
    "test:phpunit": "./composer.phar run phpunit",
    "update": "concurrently -g --timings 'npm:update:*'",
    "update:apc-gui": "scripts/update.sh apc-gui",
    "update:composer": "scripts/update.sh composer",
    "update:docker": "scripts/update.sh docker",
    "update:npm": "scripts/update.sh npm",
    "update:opcache-gui": "scripts/update.sh opcache-gui",
    "update:oxipng": "scripts/update.sh oxipng"
  },
  "keywords": [
    "catalan",
    "catal√†",
    "common voice",
    "diccionari",
    "dites populars",
    "frases fetes",
    "idioms",
    "locucions",
    "online dictionary",
    "paremiologia",
    "paremiotipus",
    "par√®mies",
    "proverbs",
    "proverbis",
    "refranys"
  ],
  "devDependencies": {
    "@ls-lint/ls-lint": "^2.3.0-beta.3",
    "@playwright/test": "^1.50.1",
    "@size-limit/file": "^11.1.6",
    "concurrently": "^9.1.2",
    "dotenv": "^16.4.7",
    "eslint": "^9.20.1",
    "eslint-plugin-unicorn": "^56.0.1",
    "html-validate": "^9.2.2",
    "htmlhint": "^1.1.4",
    "husky": "^9.1.7",
    "lighthouse": "^12.3.0",
    "lightningcss": "^1.29.1",
    "lightningcss-cli": "^1.29.1",
    "linkinator": "^6.1.2",
    "markdownlint-cli": "^0.44.0",
    "prettier": "^3.5.1",
    "sharp": "^0.33.5",
    "size-limit": "^11.1.6",
    "stylelint": "^16.14.1",
    "stylelint-config-recess-order": "^6.0.0",
    "stylelint-config-standard": "^37.0.0",
    "svgo": "^3.3.2",
    "terser": "^5.39.0"
  },
  "dependencies": {
    "simple-datatables": "^10.0.0"
  },
  "overrides": {
    "picomatch": "^4.0.2"
  }
}
